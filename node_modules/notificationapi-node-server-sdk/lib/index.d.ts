import { CreateSubNotificationRequest, DeleteSubNotificationRequest, InitConfiguration, RetractRequest, SendRequest, SetUserPreferencesRequest } from './interfaces';
import { AxiosResponse, Method } from 'axios';
declare class NotificationAPI {
    clientId: null | string;
    clientSecret: null | string;
    baseURL: string;
    init: (clientId: string, clientSecret: string, config?: InitConfiguration | undefined) => void;
    send: (sendRequest: SendRequest) => Promise<AxiosResponse>;
    retract: (retractRequest: RetractRequest) => Promise<AxiosResponse>;
    createSubNotification: (params: CreateSubNotificationRequest) => Promise<AxiosResponse>;
    deleteSubNotification: (params: DeleteSubNotificationRequest) => Promise<AxiosResponse>;
    setUserPreferences: (userId: string, userPreferences: SetUserPreferencesRequest[]) => Promise<AxiosResponse>;
    request: (method: Method, uri: string, data?: unknown) => Promise<AxiosResponse>;
}
declare const notificationapi: NotificationAPI;
export default notificationapi;
